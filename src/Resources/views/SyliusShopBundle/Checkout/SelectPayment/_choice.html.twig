{% set oneyFactoryName = constant('PayPlug\\SyliusPayPlugPlugin\\Gateway\\OneyGatewayFactory::FACTORY_NAME') %}
{% set payplugFactoryName = constant('PayPlug\\SyliusPayPlugPlugin\\Gateway\\PayplugGatewayFactory::FACTORY_NAME') %}
{% set bancontactFactoryName = constant('PayPlug\\SyliusPayPlugPlugin\\Gateway\\BancontactGatewayFactory::FACTORY_NAME') %}
{% set applePayFactoryName = constant('PayPlug\\SyliusPayPlugPlugin\\Gateway\\ApplePayGatewayFactory::FACTORY_NAME') %}

{% set checkboxClass = '' %}
{% if method.gatewayConfig.factoryName == oneyFactoryName %}
    {% set checkboxClass = 'checkbox-oney' %}
{% elseif method.gatewayConfig.factoryName == payplugFactoryName %}
    {% set checkboxClass = 'checkbox-payplug' %}
{% elseif method.gatewayConfig.factoryName == bancontactFactoryName %}
    {% set checkboxClass = 'checkbox-bancontact' %}
{% elseif method.gatewayConfig.factoryName == applePayFactoryName %}
    {% set checkboxClass = 'checkbox-applepay' %}
{% endif %}

{% set showOney = false %}
{% set showPayplug = false %}

{% if method.gatewayConfig.factoryName == oneyFactoryName and form.parent.parent.oney_payment_choice is defined %}
    {% set showOney = true %}
{% elseif is_granted('ROLE_USER')
    and method.gatewayConfig.factoryName == payplugFactoryName
    and form.parent.parent.payplug_card_choice is defined
    and is_save_card_enabled(method)
    and sylius.customer.cards is not empty
%}
    {% set showPayplug = true %}
{% endif %}

<div class="item payment-item" {{ sylius_test_html_attribute('payment-item') }}>
    <div class="field">
        <div class="ui radio checkbox {{ checkboxClass }}" {{ sylius_test_html_attribute('payment-method-checkbox') }}>
            {{ form_widget(form, sylius_test_form_attribute('payment-method-select')) }}
        </div>
    </div>
    <div class="content">
        <a class="header">
            {% if method.gatewayConfig.factoryName == oneyFactoryName %}
                <label for="{{ form.vars.id }}" data-test-payment-method-label="" data-gateway="oney">
                    {% if ((form.parent.parent.oney_payment_choice.vars.choices|last).value|split('oney_')|last) not in constant('PayPlug\\SyliusPayPlugPlugin\\Gateway\\OneyGatewayFactory::ONEY_WITHOUT_FEES_CHOICES') %}
                        <img src="{{ asset('bundles/payplugsyliuspayplugplugin/assets/oney/3x4x.svg') }}" class="oney-logo" alt="Oney"/>
                    {% else %}
                        <img src="{{ asset('bundles/payplugsyliuspayplugplugin/assets/oney/3x4x-without-fees.svg') }}" class="oney-logo" alt="Oney Sans Frais"/>
                    {% endif %}
                </label>
            {% elseif method.gatewayConfig.factoryName == payplugFactoryName %}
                {{ form_label(form, null, {'label_attr': {'data-test-payment-method-label': '', 'data-gateway': 'payplug'}}) }}
            {% elseif method.gatewayConfig.factoryName == applePayFactoryName %}
                <div class="apple-pay-method">
                    <label for="{{ form.vars.id }}" data-test-payment-method-label="" data-gateway="apple-pay">{{ form.vars.label }}
                        <img src="{{ asset('bundles/payplugsyliuspayplugplugin/assets/apple-pay/logo.svg') }}" class="apple-pay-logo" alt="Apple Pay" height="45" width="60" />
                    </label>
                </div>
            {% elseif method.gatewayConfig.factoryName == bancontactFactoryName %}
                <div class="bancontact-method">
                    <label for="{{ form.vars.id }}" data-test-payment-method-label="" data-gateway="bancontact">{{ form.vars.label }}
                        <img src="{{ asset('bundles/payplugsyliuspayplugplugin/assets/bancontact/logo.svg') }}" class="bancontact-logo" alt="Bancontact" height="45" width="60" />
                    </label>
                </div>
            {% else %}
                {{ form_label(form, null, {'label_attr': {'data-test-payment-method-label': ''}}) }}
            {% endif %}
        </a>
        {% if method.description is not null %}
            <div class="description">
                <p>{{ method.description }}</p>
            </div>
        {% endif %}
        {% if showOney %}
            <div class="oney-payment-choice payment-method-choice" data-payment-input-id="{{ form.vars.id }}">
                {{ form_row(form.parent.parent.oney_payment_choice) }}
            </div>
        {% if app.session is not null and app.session.get('oney_has_error') == true %}
            <script type="text/javascript">
                /* <![CDATA[ */
                var completeInfoRoute = '{{ path("payplug_sylius_oney_complete_info") }}';
                /* ]] */
            </script>
        {% endif %}
            {% elseif showPayplug %}
            <div class="payplug-payment-choice payment-method-choice" data-payment-input-id="{{ form.vars.id }}">
                {{ form_row(form.parent.parent.payplug_card_choice) }}
            </div>
        {% endif %}

        {% if method.gatewayConfig.factoryName == applePayFactoryName %}
            <script src="https://applepay.cdn-apple.com/jsapi/v1/apple-pay-sdk.js"></script>
            <apple-pay-button id="payplug-applepay-btn"
                              class="ui small button black"
                              onclick="apple();"
                              buttonstyle="black"
                              type="pay"
                              locale="{{ app.request.locale }}"
            ></apple-pay-button>
            <div>
                <script>
                    function apple() {
                        const request = {
                            "countryCode": "FR",
                            "currencyCode": "EUR",
                            "merchantCapabilities": [
                                "supports3DS"
                            ],
                            "supportedNetworks": [
                                "visa",
                                "mastercard"
                            ],
                            "total": {
                                "label": "Demo (Card is not charged)",
                                "type": "final",
                                "amount": "{{ order.total/100 }}"
                            },
                            'applicationData': btoa(JSON.stringify({
                                'apple_pay_domain': 'ppsylappay.eu-1.sharedwithexpose.com'
                            }))
                        };

                        // Create ApplePaySession
                        const session = new ApplePaySession(3, request);

                        session.onvalidatemerchant = async event => {
                            jQuery.ajax({
                                url: "{{ path('payplug_shop_checkout_apple_prepare') }}",
                                method: 'POST',
                                data: {
                                },
                                success: (authorization) => {
                                    // console.log(authorization);
                                    let result = authorization.merchant_session;
                                    console.log(result);

                                    if (authorization.success === true) {
                                        console.log(authorization.merchant_session);
                                        session.completeMerchantValidation(result);
                                    } else {
                                        session.abort();
                                    }
                                },
                                error: (XHR, status, error) => {
                                    console.log(XHR, status, error);
                                    session.abort();
                                    window.location.reload();
                                },
                            });
                        };

                        session.onpaymentauthorized = event => {
                            jQuery.ajax({
                                url: "{{ path('payplug_shop_checkout_apple_confirm') }}",
                                method: 'POST',
                                data: {
                                    token: event.payment.token
                                },
                                success: (authorization) => {
                                    try {
                                        var apple_pay_Session_status = ApplePaySession.STATUS_SUCCESS;

                                        console.log(authorization);
                                        console.log(authorization.data.responseToApple.status);
                                        if (authorization.data.responseToApple.status != 1) {
                                            apple_pay_Session_status = ApplePaySession.STATUS_FAILURE;
                                        }

                                        const result = {
                                            "status": apple_pay_Session_status
                                        };

                                        console.log(apple_pay_Session_status);
                                        console.log(result);

                                        session.completePayment(result);

                                        console.log(authorization.data.returnUrl);
                                        window.location.href = authorization.data.returnUrl;
                                    } catch (err) {
                                        console.error(err);
                                        window.location.reload();
                                    }
                                },
                                error: (XHR, status, error) => {
                                    console.log(XHR, status, error);
                                    session.abort();
                                    window.location.reload();
                                },
                            });
                        };

                        session.oncancel = event => {
                            console.log('Cancelling!');

                            jQuery.ajax({
                                url: "{{ path('payplug_shop_checkout_apple_cancel') }}",
                                method: 'POST',
                                data: {
                                },
                                success: (authorization) => {
                                    console.log('Cancelled!');

                                    console.log(authorization.data.returnUrl);
                                    window.location.href = authorization.data.returnUrl;
                                },
                                error: (XHR, status, error) => {
                                    console.log(XHR, status, error);
                                    window.location.reload();
                                },
                            });
                        };

                        session.begin();
                    }
                </script>
            </div>
        {% endif %}
    </div>
</div>
