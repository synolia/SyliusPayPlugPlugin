<?xml version="1.0" encoding="UTF-8" ?>

<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <imports>
        <import resource="services/gateway.xml" />
        <import resource="services/action.xml" />
        <import resource="services/client.xml" />
        <import resource="services/no_defaults.xml" />
    </imports>

    <services>
        <defaults autowire="true" autoconfigure="true">
            <bind key="$oneyClient" type="service" id="payplug_sylius_payplug_plugin.api_client.oney" />
            <bind key="$applePayClient" type="service" id="payplug_sylius_payplug_plugin.api_client.apple_pay" />
            <!--<bind key="$payplugLogger" type="service" id="monolog.logger.payum" />-->
        </defaults>

        <!--{Controller,Checker,EventSubscriber,Form,Twig,Validator,Provider/OneySimulation}-->
        <prototype
            namespace="PayPlug\SyliusPayPlugPlugin\"
            resource="../src/{Action,Command,Controller,Creator,Checker,Cli,EventListener,EventSubscriber,Form,Handler,Twig,Validator,PaymentProcessing,Processor,Provider,Resolver}/*"
        />

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Controller\OrderController"
                 class="PayPlug\SyliusPayPlugPlugin\Controller\OrderController"
                 public="true"
                 parent="sylius.controller.order"
        >
            <argument key="$applePayPaymentProvider" type="service" id="PayPlug\SyliusPayPlugPlugin\Provider\Payment\ApplePayPaymentProvider" />
            <argument key="$lockFactory" type="service" id="lock.default.factory" />
            <argument key="$logger" type="service" id="logger" />
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Controller\IpnAction" public="true">
            <argument type="service" id="payplug_sylius_payplug_plugin.repository.payment" key="$paymentRepository" />
        </service>-->

        <service
            id="PayPlug\SyliusPayPlugPlugin\Controller\OrderController"
            parent="sylius.controller.order"
        />

        <!--<service id="payplug_sylius_payplug_plugin.resolver.payment_state" class="PayPlug\SyliusPayPlugPlugin\Resolver\PaymentStateResolver">
            <argument type="service" id="payplug_sylius_payplug_plugin.api_client.payplug" />
            <argument type="service" id="sylius.manager.payment" />
        </service>-->

        <!--<service id="payplug_sylius_payplug_plugin.payment_processing.refund_handler" class="PayPlug\SyliusPayPlugPlugin\PaymentProcessing\RefundPaymentHandler" public="true">
            <argument type="service" id="sylius_refund.calculator.unit_refund_total" />
            <argument type="service" id="sylius_refund.provider.remaining_total" />
            <argument type="service" id="sylius_refund.repository.refund_payment" />
            <argument type="service" id="sylius_refund.state_resolver.refund_payment_completed_applier" />
        </service>-->

        <!--<service id="payplug_sylius_payplug_plugin.payment_processing.capture" class="PayPlug\SyliusPayPlugPlugin\PaymentProcessing\CaptureAuthorizedPaymentProcessor" public="true" />-->

        <!--<service id="payplug_sylius_payplug_plugin.command.payment_state" class="PayPlug\SyliusPayPlugPlugin\Cli\UpdatePaymentStateCommand">
            <argument type="service" id="payplug_sylius_payplug_plugin.repository.payment" />
            <argument type="service" id="payplug_sylius_payplug_plugin.resolver.payment_state" />
            <argument type="service" id="monolog.logger.payum" />
            <tag name="console.command" />
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Command\CaptureAuthorizedPaymentCommand" class="PayPlug\SyliusPayPlugPlugin\Command\CaptureAuthorizedPaymentCommand">
            <argument key="$paymentRepository" type="service" id="payplug_sylius_payplug_plugin.repository.payment" />
            <tag name="console.command" />
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Controller\OneySimulationPopin" class="PayPlug\SyliusPayPlugPlugin\Controller\OneySimulationPopin">
            <argument type="service" id="sylius.repository.product_variant" key="$productVariantRepository" />
        </service>-->
        <!--<service id="PayPlug\SyliusPayPlugPlugin\Controller\OneyIsProductEligible" class="PayPlug\SyliusPayPlugPlugin\Controller\OneyIsProductEligible">
            <argument type="service" id="sylius.repository.product_variant" key="$productVariantRepository" />
        </service>-->
        <!--<service id="PayPlug\SyliusPayPlugPlugin\Controller\OneClickAction" class="PayPlug\SyliusPayPlugPlugin\Controller\OneClickAction">
            <argument type="service" id="sylius.repository.payment" key="$paymentRepository" />
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Resolver\OneyPaymentMethodsResolverDecorator"
                decorates="sylius.resolver.payment_methods"
                public="false"
        >
            <argument type="service" key="$decorated" id="PayPlug\SyliusPayPlugPlugin\Resolver\OneyPaymentMethodsResolverDecorator.inner"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Resolver\PayPlugPaymentMethodsResolverDecorator"
                decorates="sylius.resolver.payment_methods"
                public="false"
        >
            <argument type="service" key="$decorated" id="PayPlug\SyliusPayPlugPlugin\Resolver\PayPlugPaymentMethodsResolverDecorator.inner"/>
            <argument type="service" key="$supportedMethodsProvider" id="PayPlug\SyliusPayPlugPlugin\Provider\SupportedMethodsProvider"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Resolver\BancontactPaymentMethodsResolverDecorator"
                decorates="sylius.resolver.payment_methods"
                public="false"
        >
            <argument type="service" key="$decorated" id="PayPlug\SyliusPayPlugPlugin\Resolver\BancontactPaymentMethodsResolverDecorator.inner"/>
            <argument type="service" key="$supportedMethodsProvider" id="PayPlug\SyliusPayPlugPlugin\Provider\SupportedMethodsProvider"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Resolver\ApplePayPaymentMethodsResolverDecorator"
                decorates="sylius.resolver.payment_methods"
                public="false"
        >
            <argument type="service" key="$decorated" id="PayPlug\SyliusPayPlugPlugin\Resolver\ApplePayPaymentMethodsResolverDecorator.inner"/>
            <argument type="service" key="$supportedMethodsProvider" id="PayPlug\SyliusPayPlugPlugin\Provider\SupportedMethodsProvider"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Resolver\AmericanExpressPaymentMethodsResolverDecorator"
                decorates="sylius.resolver.payment_methods"
                public="false"
        >
            <argument type="service" key="$decorated" id="PayPlug\SyliusPayPlugPlugin\Resolver\AmericanExpressPaymentMethodsResolverDecorator.inner"/>
            <argument type="service" key="$supportedMethodsProvider" id="PayPlug\SyliusPayPlugPlugin\Provider\SupportedMethodsProvider"/>
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Provider\SupportedMethodsProvider">
            <argument type="service" id="sylius.context.currency"/>
        </service>-->

<!--        <service id="payplug.apple_pay_order.provider" class="PayPlug\SyliusPayPlugPlugin\Provider\ApplePayOrderProvider" public="true">
&lt;!&ndash;            <argument type="service" id="sylius.context.cart"/>&ndash;&gt;
        </service>

        <service id="PayPlug\SyliusPayPlugPlugin\MessageHandler\RefundPaymentGeneratedHandler">
            <argument type="service" id="doctrine.orm.entity_manager" />
            <argument type="service" id="sylius.repository.payment" />
            <argument type="service" id="sylius_refund.repository.refund_payment" />
            <argument type="service" id="payplug.repository.payplug_refund_history" />
&lt;!&ndash;            <argument type="service" id="sm.factory" />&ndash;&gt;
            <argument type="service" id="payplug_sylius_payplug_plugin.payment_processing.refund" />
            <argument type="service" id="logger" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="sylius.repository.order" />
            <argument type="service" id="translator.default" />
            <tag name="messenger.message_handler" bus="sylius.event_bus" />
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Provider\SupportedRefundPaymentMethodsProviderDecorator"
                decorates="sylius_refund.provider.refund_payment_methods"
                decoration-inner-name="sylius_refund.provider.refund_payment_methods.inner"
                public="false"
        >
            <argument type="service" id="sylius_refund.provider.refund_payment_methods.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="sylius.repository.order"/>
            <argument>%sylius_refund.supported_gateways%</argument>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Provider\OneySupportedRefundPaymentMethodsProviderDecorator"
                decorates="PayPlug\SyliusPayPlugPlugin\Provider\SupportedRefundPaymentMethodsProviderDecorator"
                decoration-inner-name="PayPlug\SyliusPayPlugPlugin\Provider\SupportedRefundPaymentMethodsProviderDecorator.inner"
                public="false"
        >
            <argument type="service" id="PayPlug\SyliusPayPlugPlugin\Provider\SupportedRefundPaymentMethodsProviderDecorator.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="sylius.repository.order"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Provider\BancontactSupportedRefundPaymentMethodsProviderDecorator"
                decorates="PayPlug\SyliusPayPlugPlugin\Provider\OneySupportedRefundPaymentMethodsProviderDecorator"
                decoration-inner-name="PayPlug\SyliusPayPlugPlugin\Provider\OneySupportedRefundPaymentMethodsProviderDecorator.inner"
                public="false"
        >
            <argument type="service" id="PayPlug\SyliusPayPlugPlugin\Provider\OneySupportedRefundPaymentMethodsProviderDecorator.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="sylius.repository.order"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Provider\ApplePaySupportedRefundPaymentMethodsProviderDecorator"
                decorates="PayPlug\SyliusPayPlugPlugin\Provider\BancontactSupportedRefundPaymentMethodsProviderDecorator"
                decoration-inner-name="PayPlug\SyliusPayPlugPlugin\Provider\BancontactSupportedRefundPaymentMethodsProviderDecorator.inner"
                public="false"
        >
            <argument type="service" id="PayPlug\SyliusPayPlugPlugin\Provider\BancontactSupportedRefundPaymentMethodsProviderDecorator.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="sylius.repository.order"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Provider\AmexSupportedRefundPaymentMethodsProviderDecorator"
                decorates="PayPlug\SyliusPayPlugPlugin\Provider\ApplePaySupportedRefundPaymentMethodsProviderDecorator"
                decoration-inner-name="PayPlug\SyliusPayPlugPlugin\Provider\ApplePaySupportedRefundPaymentMethodsProviderDecorator.inner"
                public="false"
        >
            <argument type="service" id="PayPlug\SyliusPayPlugPlugin\Provider\ApplePaySupportedRefundPaymentMethodsProviderDecorator.inner"/>
            <argument type="service" id="request_stack"/>
            <argument type="service" id="sylius.repository.order"/>
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Action\Admin\CompleteRefundPaymentAction">
            <argument type="service" id="request_stack" />
            <argument type="service" id="sylius_refund.repository.refund_payment" />
            <argument type="service" id="sylius.repository.order" />
            <argument type="service" id="sylius_refund.state_resolver.refund_payment_completed_applier" />
            <argument type="service" id="router" />
            <argument type="service" id="sylius.event_bus" />
            <argument type="service" id="Sylius\RefundPlugin\Provider\RelatedPaymentIdProviderInterface" />
            <argument type="service" id="translator"/>

            <tag name="controller.service_arguments"/>
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Action\Admin\RefundUnitsAction">
            <argument type="service" id="sylius.command_bus" />
            <argument type="service" id="request_stack" />
            <argument type="service" id="router" />
            <argument type="service" id="sylius_refund.creator.request_command" />
            <argument type="service" id="monolog.logger" />

            <tag name="controller.service_arguments"/>
        </service>-->

        <service id="PayPlug\SyliusPayPlugPlugin\Provider\OneySimulation\OneySimulationDataProviderInterface" class="PayPlug\SyliusPayPlugPlugin\Provider\OneySimulation\OneySimulationDataProvider" />
        <!--<service id="PayPlug\SyliusPayPlugPlugin\Provider\OneySimulation\CachedSimulationDataProvider"
                 decorates="PayPlug\SyliusPayPlugPlugin\Provider\OneySimulation\OneySimulationDataProviderInterface">
            <argument type="service" key="$decorated" id="PayPlug\SyliusPayPlugPlugin\Provider\OneySimulation\CachedSimulationDataProvider.inner"/>
        </service>-->

        <!--<service
                id="PayPlug\SyliusPayPlugPlugin\Creator\RefundUnitsCommandCreatorDecorator"
                decorates="sylius_refund.creator.request_command"
                decoration-inner-name="sylius_refund.creator.request_command.inner"
                public="false"
        >
            <argument type="service" id="sylius_refund.creator.request_command.inner"/>
            <argument type="service" id="sylius_refund.converter.request_to_refund_units"/>
        </service>-->

        <!--<service
            id="PayPlug\SyliusPayPlugPlugin\Handler\PaymentNotificationHandler"
            public="false"
        >
            <argument type="service" id="monolog.logger.payum" />
            <argument type="service" id="payplug.repository.payplug_card" />
            <argument type="service" id="payplug.factory.payplug_card" />
        </service>-->

        <!--<service
            id="PayPlug\SyliusPayPlugPlugin\Handler\RefundNotificationHandler"
            public="false"
        >
            <argument type="service" id="payplug.repository.payplug_refund_history" />
&lt;!&ndash;            <argument type="service" id="payplug_sylius_payplug_plugin.payment_processing.refund_handler" />&ndash;&gt;
            <argument type="service" id="sylius.command_bus" />
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\EventListener\AccountMenuListener">
            <tag name="kernel.event_listener" event="sylius.menu.shop.account" method="addAccountMenuItems" />
        </service>-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Controller\CardController">
            <argument type="service" key="$payPlugApiClient" id="payplug_sylius_payplug_plugin.api_client.payplug" />
        </service>-->

<!--        <service id="PayPlug\SyliusPayPlugPlugin\Provider\OneySupportedPaymentChoiceProvider" />-->
<!--        <service id="PayPlug\SyliusPayPlugPlugin\Creator\PayPlugPaymentDataCreator" />-->
<!--        <service id="PayPlug\SyliusPayPlugPlugin\Provider\Payment\ApplePayPaymentProvider" />-->

        <!--<service id="PayPlug\SyliusPayPlugPlugin\Provider\PaymentTokenProvider">
            <argument type="service" id="payum" />
            <argument type="string">sylius_shop_order_after_pay</argument>
        </service>-->

    </services>
</container>
